# This is the main configuration file for the application.
# ~~~~~
play.crypto.secret = "changeme"
play.i18n.langs = [ "en" ]
play.modules.enabled += "modules.ActorModule"

app {
  appname = "pref"
  apppath = "/etc/preference-1.0-SNAPSHOT"
}

crypto {
  secret = ""
  usersecret = ""
  profilesecret = ""
  jwtsecret =  ""
  qrsecret =  ""
  paymentsecret =  ""
}

# Actors
# ~~~~~
cassandraactor{
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
}

errorreporteractor {
  startingRouteeNumber = 1
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
  breaker {
      maxFailures = 3
      callTimeout = 10000
      resetTimeout = 60000
  }
  scheduler{
    initialDelay = 2000
    interval = 1800000
  }
}

indexpreferenceactor{
  batchsave { size = 5 }
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
  breaker {
      maxFailures = 3
      callTimeout = 10000
      resetTimeout = 60000
  }
  scheduler{
    initialDelay = 2000
    interval = 2000
  }
}

updatepreferenceactor{
  batchsave { size = 5 }
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
  breaker {
      maxFailures = 3
      callTimeout = 10000
      resetTimeout = 60000
  }
  scheduler{
    initialDelay = 2000
    interval = 2000
  }
}

indexshopactor{
  batchsave { size = 5 }
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
  breaker {
      maxFailures = 3
      callTimeout = 10000
      resetTimeout = 60000
  }
  scheduler{
    initialDelay = 2000
    interval = 2000
  }
}

indexfeedactor{
  batchsave { size = 5 }
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
  breaker {
      maxFailures = 3
      callTimeout = 10000
      resetTimeout = 60000
  }
  scheduler{
    initialDelay = 2000
    interval = 2000
  }
}

indexerroractor{
  batchsave { size = 5 }
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
  breaker {
      maxFailures = 3
      callTimeout = 10000
      resetTimeout = 60000
  }
  scheduler{
    initialDelay = 2000
    interval = 2000
  }
}

indexabuseactor{
  batchsave { size = 5 }
  startingRouteeNumber = 3
  supervisorStrategy {
    withinTimeRange = 36000
    maxNrOfRetries = 60
  }
  breaker {
      maxFailures = 3
      callTimeout = 10000
      resetTimeout = 60000
  }
  scheduler{
    initialDelay = 2000
    interval = 2000
  }
}

# Cassandra
# ~~~~~
cassandra {
  userkeyspace = "usersdb"
  shopkeyspace = "shopsdb"
  globalkeyspace = "globalsdb"
  privatekeyspace = "privateskeyspace"

  admintable = "adminstable"
  usertable = "userstable"
  hinttable = "hintsstable"
  shoptable = "shopstable"
  posttable = "poststable"
  feedtable = "feedstable"
  hiddenfeedtable = "hiddenfeedstable"
  jwttable = "jwttable"
  profiletable = "profilestable"
  paymenttable = "paymentstable"
  phototable = "photostable"
  shoptemplatetable = "shoptemplatestable"
  feedtemplatetable = "feedtemplatestable"
  shoppositiontable = "shoppositionstable"
  shopreviewtable = "shopreviewstable"
  feedreviewtable = "feedreviewstable"

  port = 9042
  hosts = ["127.0.0.1", "cassandra-node1"]
  numberOfContactPoints = 2
  httpServerBaseUri  = "http://1.2.3.4:18080/"
}

jwtAuthenticator {
  fieldName = "JWT-Token"
  issuerClaim = "KAOSK"
  authenticatorIdleTimeout = "60"
  authenticatorExpiry = "365"
  sharedSecret = "changeme"

  crypter = "6ffc82fa3aec0b7f873aa77bb5cb5a0f 3c4565495802c7cf8a5cb9be9f01a3d1"
}

# Elastic
# ~~~~~~~~~~~
elasticclient {
  hosts = ["127.0.0.1", "192.168.33.1", "localhost"]
  port = 9300
  cluster {
    name = "elasticsearch"
  }
  client {
    transport.sniff = true
    transport.ignore_cluster_name = true
  }
  preference.index {
    number_of_shards = 1
    number_of_replicas = 0          
    name = "preferencedb"
    type = "preferencestable"
  }
  searchshop.index {
    number_of_shards = 1
    number_of_replicas = 0          
    name = "shopdb"
    type = "shopstable"
  }
  searchfeed.index {
    number_of_shards = 1
    number_of_replicas = 0          
    name = "feeddb"
    type = "feedstable"
  }
  post.index {
    number_of_shards = 1
    number_of_replicas = 0          
    name = "preferencedb"
    type = "preferencestable"
  }
  hint.index {
    number_of_shards = 1
    number_of_replicas = 0          
    name = "preferencedb"
    type = "preferencestable"
  }
  abuse.index {
    number_of_shards = 1
    number_of_replicas = 0          
    name = "preferencedb"
    type = "preferencestable"
  }
  error.index {
    number_of_shards = 1
    number_of_replicas = 0          
    name = "preferencedb"
    type = "preferencestable"
  }
}

kafka {
  #msgtopic = "message"    #uses appname to send msg to app instance
  dudtopic = "dudtopic" #space filler due to above changes
  msgpartition = 0
  retrykmsgtopic = "kmsg" #this centrally retry saves any msg
  retrykmsgpartition = 0
  gridtopic = "grid"    #for updating users on each app instance
  gridpartition = 0
  errortopic = "error"      #all error reports saved to elastic
  errorpartition = 0
  healthtopic = "health"    #retry saving msg for post in cassandra
  healthpartition = 0
  abusetopic = "abuse"   #save complaints to elastic
  abusepartition = 0
  preferencetopic = "pref"   #save prefs to elastic
  preferencepartition = 0
  #client.id = "app" + random
  #group.id = "app" + random
  source = "admin"
  genre = "processactor"
}

# Kafka
# ~~~~~~~~~~~

consumer {
    auto.commit.interval.ms = "1000"
    session.timeout.ms = "30000"
    bootstrap.servers = "kafka:9092"
    key.deserializer = "org.apache.kafka.common.serialization.ByteArrayDeserializer"
    value.deserializer = "org.apache.kafka.common.serialization.ByteArrayDeserializer"
}

producer {
    bootstrap.servers = "kafka:9092"
    key.serializer = "org.apache.kafka.common.serialization.ByteArraySerializer"
    value.serializer = "org.apache.kafka.common.serialization.ByteArraySerializer"
    acks = -1
    retries = 3
    batch.size = 1
    linger.ms = 1
    buffer.memory = 33554432
}

# Akka into logs
# ~~~~~~~~~~~~~~
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel="DEBUG"
}

# Play mailer
# ~~~~~~~~~~~
play.mailer {
  host = "smtp.sendgrid.net"
  port = 587
  tls = true
  user = ""
  user = ${?SENDGRID_USERNAME}
  password = ""
  password = ${?SENDGRID_PASSWORD}
}
# Email to Admin
# ~~~~~~~~~~~
email {
  recievers = ["@gmail.com"]
  to = "@gmail.com"
  from = "@gmail.com"
  username = "@gmail.com"
  password = ""
  host = "smtp.gmail.com"
  port = 465
  ttls = "true"
  auth = "true"
}
